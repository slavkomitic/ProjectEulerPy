def triangularnumber(n):
	"""
	The sequence of triangle numbers is generated by adding the natural numbers. 
	So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.

	The function finds and returns the value of the first triangle number to have over <n> divisors.
	"""
	def _triagle(limit=10**6):
		for i in range(2, limit+1):
			yield sum([a for a in range(i)])

	def _divisorcount(number):
		return len([n for n in range(1, int(number// 2) + 2) if number%n==0]) + 1

	generator = _triagle()

	for item in generator:
		if _divisorcount(item) > n:
			return item



if __name__ == '__main__':
	print(triangularnumber(500))